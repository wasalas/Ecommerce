@page "/categoria"
@page "/categoria/{id:int}"

@inject ICategoriaServicio categoriaServicio
@inject IToastService toastService
@inject NavigationManager _navServicio

@attribute [Authorize(Roles = "Administrador")]

<div class="row justify-content-center  mt-3">
    <p class="col-sm-12 col-md-8 col-xl-10 h4 mt-2">@Titulo</p>
</div>
<div class="row justify-content-center  mt-3">
    <div class="col-sm-12 col-md-8 col-xl-10">

        <EditForm Model="modelo" OnValidSubmit="GuardarCambios">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="input-group">
                <span class="input-group-text bg-light">Nombre</span>
                <input type="text" class="form-control" @bind-value="modelo.Nombre">
            </div>
            <ValidationMessage For="@(()=>modelo.Nombre)" />

            <div class="mt-3">
                <button type="submit" class="btn btn-primary" style="width:130px">@boton</button>
                <a href="/categorias" class="btn btn-secondary" style="width:130px">Volver</a>
            </div>
        </EditForm>


    </div>

</div>

@code {
    [Parameter]
    public int id { get; set; }
    private string Titulo = "Nueva Categoria";
    private string boton = "Crear";
    private CategoriaDTO modelo = new CategoriaDTO();

    protected override async Task OnParametersSetAsync()
    {
        if (id != 0)
        {
            Titulo = "Editar Categoria";
            boton = "Actualizar";

            var response = await categoriaServicio.Obtener(id);
            if (response.EsCorrecto == true)
            {
                modelo = (CategoriaDTO)response.Resultado;
            }
            else
                toastService.ShowWarning(response.Mensaje);
        }
    }
    private async Task GuardarCambios()
    {
        bool respuesta = true;
        string mensaje = string.Empty;

        if (id != 0)
        {
            var response = await categoriaServicio.Editar(modelo);
            if (response.EsCorrecto == true)
            {
                mensaje = "Categoria modificada";
            }
            else
            {
                respuesta = false;
                mensaje = "No se pudo modificar";
            }
        }
        else
        {
            var response = await categoriaServicio.Crear(modelo);

            if (response.EsCorrecto == true)
            {
                mensaje = "Categoria creada";
            }
            else
            {
                respuesta = false;
                mensaje = "No se pudo crear";
            }
        }
        if (respuesta)
        {
            toastService.ShowSuccess(mensaje);
            _navServicio.NavigateTo("/categorias");
        }
        else
            toastService.ShowWarning(mensaje);

    }
}
